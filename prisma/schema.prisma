generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique

  password Password?
  decks    Deck[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Deck {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  lesson Lesson?
  cards  Card[]
}

model Lesson {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deck   Deck   @relation(fields: [deckId], references: [id], onDelete: Cascade)
  deckId String @unique
  cards  Card[]
}

model Card {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  front     String
  back      String

  deck    Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade)
  deckId  String
  lessons Lesson[]
  answers Answer[]
}

model Answer {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  correctness Float

  card   Card   @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId String
}
